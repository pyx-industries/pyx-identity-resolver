"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2128],{8096:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>s});var i=t(4848),r=t(8453);const s=[];function o(e){const n={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},5950:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"introduction/link_resolution","title":"Link resolution","description":"Link resolution is generally a three-step process","source":"@site/versioned_docs/version-1.0.0/introduction/link_resolution.md","sourceDirName":"introduction","slug":"/introduction/link_resolution","permalink":"/pyx-identity-resolver/docs/introduction/link_resolution","draft":false,"unlisted":false,"editUrl":"https://github.com/pyx-industries/pyx-identity-resolver/versioned_docs/version-1.0.0/introduction/link_resolution.md","tags":[],"version":"1.0.0","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Link resolution"},"sidebar":"tutorialSidebar","previous":{"title":"Link Registration","permalink":"/pyx-identity-resolver/docs/introduction/link_registration"},"next":{"title":"Getting Started","permalink":"/pyx-identity-resolver/docs/getting-started/"}}');var r=t(4848),s=t(8453),o=t(8096);const l={sidebar_position:8,title:"Link resolution"},a="Link resolution",d={},c=[...o.RM,{value:"Reference standards",id:"reference-standards",level:2},{value:"Resolver discovery",id:"resolver-discovery",level:2},{value:"Resolution flow",id:"resolution-flow",level:3},{value:"Link Types",id:"link-types",level:3},{value:"Resolve identity resolver",id:"resolve-identity-resolver",level:3},{value:"Response Determination Process",id:"response-determination-process",level:3},{value:"API Operations",id:"api-operations",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.Ay,{}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"link-resolution",children:"Link resolution"})}),"\n",(0,r.jsx)(n.p,{children:"Link resolution is generally a three-step process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["The first step is to construct an ",(0,r.jsx)(n.a,{href:"https://www.iso.org/standard/85540.html",children:"ISO 18975"})," conforming URL\nfrom a given entity/facility/product identifier.\nThis step can be skipped if the identifier is already\na identity resolver URL such as a QR code."]}),"\n",(0,r.jsx)(n.li,{children:"The second step if to request link information\nfrom the identity resolver for the given entity/facility/product.\nThe identity resolver will typically return a list of link types\nthat indicate locations of further information.\nThe returned links may point to further identity resolvers\nor other external locations."}),"\n",(0,r.jsx)(n.li,{children:"The final step is to follow one or more of the retrieved links\nto obtain the specific information for that link type\n(eg a digital product passport).\nSome types of links (or further information)\nMAY require authorisation for secure data access."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'These steps may be merged into a single query\nwhen the required link type is already known.\nSo, rather than "tell me what you have,\nthen I\'ll choose the link I want",\nthe single query is more like "give me the DPP for this product".'}),"\n",(0,r.jsx)(n.h2,{id:"reference-standards",children:"Reference standards"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.iso.org/standard/85540.html",children:"ISO 18975"})," is a very minimal specification\nthat leaves many questions un-answered\n(eg how to identify link types,\nhow to behave when asked about an unknown identifier\nthat is related to a known identifier)."]}),"\n",(0,r.jsxs)(n.p,{children:["Please refer to the detailed GS1 identity resolver specification\nfor more documentation - but remember to abstract it\nto suit any identifier type (eg including non-gs1 identifiers).\n",(0,r.jsx)(n.a,{href:"https://ref.gs1.org/standards/resolver/",children:"https://ref.gs1.org/standards/resolver/"})]}),"\n",(0,r.jsx)(n.h2,{id:"resolver-discovery",children:"Resolver discovery"}),"\n",(0,r.jsxs)(n.p,{children:["The resolver discovery process is used to transform an identifier\n(eg an ABN or a GTIN barcode)\ninto an ",(0,r.jsx)(n.a,{href:"https://www.iso.org/standard/85540.html",children:"ISO 18975"})," conforming identity resolver URL.\nThis step is not required when a ",(0,r.jsx)(n.a,{href:"https://www.iso.org/standard/85540.html",children:"ISO 18975"})," conforming resolver URL\nis provided directly to the user\n(eg as a QR code on a product or as a property in a data file)."]}),"\n",(0,r.jsx)(n.p,{children:"This flow starts with the discovery of an identifier - whether scanned\nfrom product packaging or found in a digital document."}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart\n    A[Start] --\x3e B[Read identifier]\n    B --\x3e C{Known scheme URI?}\n    C -- Yes --\x3e D[Get scheme rules]\n    D --\x3e E[Parse identfier string]\n    E --\x3e F[Construct resolver URL]\n    C -- No ----\x3e G[End:Unknown scheme]"}),"\n",(0,r.jsx)(n.p,{children:"The scheme URI may either be provided with the identifier in a data file\n(eg a DPP) as follows"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"identifier": {\n    "schemeURI":"ato.gov.au/abn",\n    "identifierValue":"41161080146"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["or the schemeURI may be known by the identity resolver client\ndue to the context of the identifier discovery.\nFor example when using an app to scan a GS1 GTIN as a 1-D barcode,\nit is likely that the app already knows that it is scanning\na GS1 GTIN and will know the schemeURI is ",(0,r.jsx)(n.code,{children:"id.gs1.org/gtin"})]}),"\n",(0,r.jsx)(n.p,{children:"The next step is to lookup the resolver configuration file\nfor the given schemeURI.\nThe configuration file may already be available\nto the link resolver client or could be discovered\nfrom an ecosystem manager such as the UNTP identifier scheme register.\nThe resolver configuration file will be of the form;"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"identitySchemes":[\n   {\n    "schemeURI":"id.gs1.org/sgtin",\n    "parsingTemplate":"Root <- \'sgtin\' RestChars RestChars <- [a-zA-Z0-9]+",\n    "resolverTemplate":"https://resolver.gs1.org/gtin/{id}",\n    "linkTypes":"https://www.gs1.org/voc/?show=linktypes"\n   },\n   {\n    next scheme...\n   }\n]\n'})}),"\n",(0,r.jsx)(n.p,{children:"where"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"schemeURI is the key to match the discovered schemeURI\nwith the relevant resolver configuration rules."}),"\n",(0,r.jsxs)(n.li,{children:['parsingTemplate (if needed) provides rules\nabout how to parse the identifier\nneeded for the identity resolver\nfrom the identifier string discovered by the client.\nFor example to take the rightmost string\nfrom "urn:epc',"\ud83c\udd94",'sgtin:123456.23456.12345678".']}),"\n",(0,r.jsxs)(n.li,{children:["resolverTemplate provides the resolver URL with a placeholder ",(0,r.jsx)(n.code,{children:"{id}"}),"\nwhich should be substituted for the discovered\n(and optionally parsed) identifier."]}),"\n",(0,r.jsx)(n.li,{children:"linkTypes provides a vocabulary reference\nfor the link types expected from the list resolver service."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"resolution-flow",children:"Resolution flow"}),"\n",(0,r.jsx)(n.p,{children:"The resolution flow runs in the identity resolver service\nwhen called with the identity resolver URL\nconstructed via the previous flow.\nIt needs to accommodate conditions where a resolution is requested\nfor an identifier that is unknown to the service\nbut is related to a known identifier - for example\ncalling GS1 global identity resolver with an sgtin\nwhen it only knows about related gtin."}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart\n    A[Start] --\x3e B{valid element string?}\n    B -- No --\x3e C[error 400]\n    B -- Yes --\x3e D{identifier record found?}\n    D -- No --\x3e E{redirection possible?}\n    D -- Yes --\x3e F{link type requested?}\n    E -- No --\x3e G[not found 404]\n    E -- Yes --\x3e H[redirect to external <br>  resolver 307]\n    F -- No --\x3e I[redirect to default link 307]\n    F -- Yes --\x3e K{linktypes=all?}\n    K -- Yes --\x3e L[create/append list of links]\n    L --\x3e J{is there a less granular identifier?}\n    J -- Yes --\x3e L\n    J -- No --\x3e X[return list of links 200]\n    K -- No --\x3e M{matching link available?}\n    M -- Yes --\x3e N[redirect to matching <br>  link 307]\n    M -- No --\x3e O{matching link at next level?}\n    O -- Yes --\x3e P[redirect to requested link <br> type at next level up 307]\n    O -- No --\x3e Q[redirect to default 307]"}),"\n",(0,r.jsx)(n.h3,{id:"link-types",children:"Link Types"}),"\n",(0,r.jsxs)(n.p,{children:["Link types should be drawn from a controlled vocabulary such as ",(0,r.jsx)(n.a,{href:"http://localhost:3000/api/1.0.0/voc/?show=linktypes",children:"http://localhost:3000/api/1.0.0/voc/?show=linktypes"}),". UNTP may define a catalog of controlled link type vocabularies."]}),"\n",(0,r.jsxs)(n.p,{children:["ResolverURLs may include the parameter ",(0,r.jsx)(n.code,{children:"linkType"}),' which can be set to any of the allowed link types for the given identifier scheme or can be set to "all". For example:']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"http://localhost:3000/api/1.0.0/gs1/01/12345678901234/10/12345678901234567890?linkType=gs1:certificationInfo"})}),"\n",(0,r.jsx)(n.p,{children:"This URLis requesting the resolver to redirect the query to a target that provides certification information about the GTIN 12345678901234 with the batch/lot number 12345678901234567890."}),"\n",(0,r.jsxs)(n.p,{children:["In the event that linkType is set to ",(0,r.jsx)(n.code,{children:"all"}),", the resolver should return a linkset structure as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "linkset": [\n    {\n      "anchor": "http://localhost:3000/api/1.0.0/gs1/01/12345678901234/10/12345678901234567890",\n      "http://localhost:3000/api/1.0.0/voc/certificationInfo": [\n        {\n          "href": "https://example.com",\n          "title": "Certification Information",\n          "type": "application/json",\n          "hreflang": ["en"],\n          "title*": [\n            {\n              "value": "Certification Information",\n              "language": "en"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"resolve-identity-resolver",children:"Resolve identity resolver"}),"\n",(0,r.jsx)(n.p,{children:"When the identity resolvers are registered, the anonymous user can make a query with the namespace, identifiers, mime type, accepted language and link type to resolve the identity resolver. For example, the user can query the identity resolver with the following URL:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"http://localhost:3000/api/1.0.0/gs1/01/12345678901234/10/12345678901234567890?linkType=gs1:certificationInfo\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The response will be redirected to the target URL (e.g., ",(0,r.jsx)(n.a,{href:"https://example.com",children:"https://example.com"}),")"]}),"\n",(0,r.jsx)(n.h3,{id:"response-determination-process",children:"Response Determination Process"}),"\n",(0,r.jsx)(n.p,{children:"When processing a URI and returning the appropriate response, the system follows a specific order of precedence based on the linkType, ianaLanguage, context, and mimeType. This ensures that the most relevant and specific response is returned for each request. The order of precedence is as follows:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"linkType, ianaLanguage, context, mimeType"}),"\n",(0,r.jsx)(n.li,{children:"linkType, ianaLanguage, context, defaultMimeType"}),"\n",(0,r.jsx)(n.li,{children:"linkType, ianaLanguage, context"}),"\n",(0,r.jsx)(n.li,{children:"linkType, ianaLanguage, defaultContext"}),"\n",(0,r.jsx)(n.li,{children:"linkType, ianaLanguage"}),"\n",(0,r.jsx)(n.li,{children:"linkType, defaultIanaLanguage"}),"\n",(0,r.jsx)(n.li,{children:"linkType"}),"\n",(0,r.jsx)(n.li,{children:"defaultLinkType"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This hierarchical approach allows the system to find the most appropriate response by starting with the most specific combination of parameters and gradually falling back to more general options."}),"\n",(0,r.jsx)(n.p,{children:"For example, if a request specifies a linkType, ianaLanguage, context, and mimeType, the system will first attempt to find a matching response with all these parameters. If no match is found, it will then look for a response with the default mimeType for that combination, and so on."}),"\n",(0,r.jsx)(n.p,{children:"This process ensures that users receive the most relevant information based on their specific request parameters, while also providing fallback options when exact matches are not available."}),"\n",(0,r.jsx)(n.h2,{id:"api-operations",children:"API Operations"}),"\n",(0,r.jsx)(n.p,{children:"The Link Resolution endpoint supports the following operations:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Resolve an identity resolver"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"http://localhost:3000/api-docs#/Link%20Resolution",children:"API specification"})," for details."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);