"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[94],{8481:(e,i,n)=>{n.d(i,{Ay:()=>l,RM:()=>s});var t=n(4848),r=n(8453);const s=[];function a(e){const i={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsx)(i.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},6589:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"introduction/identifier_management","title":"Identifier Management","description":"Authorized users can register identifier schemes using namespaces, and application identifiers that will be used in the Identity Digital Resolver (IDR) service.","source":"@site/docs/introduction/identifier_management.md","sourceDirName":"introduction","slug":"/introduction/identifier_management","permalink":"/pyx-identity-resolver/docs/next/introduction/identifier_management","draft":false,"unlisted":false,"editUrl":"https://github.com/pyx-industries/pyx-identity-resolver/docs/introduction/identifier_management.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Identifier Management"},"sidebar":"tutorialSidebar","previous":{"title":"Access Control","permalink":"/pyx-identity-resolver/docs/next/introduction/access-control"},"next":{"title":"Link Types","permalink":"/pyx-identity-resolver/docs/next/introduction/link_types"}}');var r=n(4848),s=n(8453),a=n(8481);const l={sidebar_position:4,title:"Identifier Management"},d="Identifier Management",o={},c=[...a.RM,{value:"Identifier Structure",id:"identifier-structure",level:2},{value:"Identifier Properties",id:"identifier-properties",level:2},{value:"Create/Update Identifier Flow",id:"createupdate-identifier-flow",level:3},{value:"Retrieve Identifier Flow",id:"retrieve-identifier-flow",level:3},{value:"Delete Identifier Flow",id:"delete-identifier-flow",level:3},{value:"Application Identifier Properties",id:"application-identifier-properties",level:2},{value:"Identifier Types and Prerequisites",id:"identifier-types-and-prerequisites",level:2},{value:"1. Identifier (I)",id:"1-identifier-i",level:3},{value:"2. Qualifier (Q)",id:"2-qualifier-q",level:3},{value:"3. Data Attribute (D)",id:"3-data-attribute-d",level:3},{value:"General Prerequisites",id:"general-prerequisites",level:3},{value:"API Operations",id:"api-operations",level:2}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.Ay,{}),"\n",(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"identifier-management",children:"Identifier Management"})}),"\n",(0,r.jsx)(i.p,{children:"Authorized users can register identifier schemes using namespaces, and application identifiers that will be used in the Identity Digital Resolver (IDR) service."}),"\n",(0,r.jsx)(i.h2,{id:"identifier-structure",children:"Identifier Structure"}),"\n",(0,r.jsxs)(i.p,{children:["The identifier management system uses a JSON structure to define each namespace and its associated application identifiers. Each identifier scheme is stored in its own file, with the filename constructed as: ",(0,r.jsx)(i.code,{children:"{OBJECT_STORAGE_BUCKET_NAME}/{IDENTIFIER_PATH}/{namespace}.json"}),"."]}),"\n",(0,r.jsx)(i.p,{children:"Here's an example of the structure for a single identifier scheme:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-json",children:'{\n  "id": "identifiers/gs1",\n  "namespace": "gs1",\n  "namespaceURI": "",\n  "namespaceProfile": "",\n  "applicationIdentifiers": [\n    {\n      "title": "Global Trade Item Number (GTIN)",\n      "label": "GTIN",\n      "shortcode": "gtin",\n      "ai": "01",\n      "type": "I",\n      "regex": "(\\\\d{12,14}|\\\\d{8})",\n      "qualifiers": ["10"]\n    },\n    {\n      "title": "Batch or lot number",\n      "label": "BATCH/LOT",\n      "shortcode": "lot",\n      "ai": "10",\n      "type": "Q",\n      "regex": "([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x39\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,20})"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(i.h2,{id:"identifier-properties",children:"Identifier Properties"}),"\n",(0,r.jsx)(i.p,{children:"Each identifier JSON object consists of the following top-level properties:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"id"}),": A unique identifier for the scheme, in the format ",(0,r.jsx)(i.code,{children:"{IDENTIFIER_PATH}/{namespace}"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"namespace"}),": The namespace of the identifier scheme"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"namespaceURI"}),": The base URI of the namespace link type vocabulary (if applicable). Defaults to internal URI ",(0,r.jsx)(i.code,{children:"http://localhost:3000/api/1.0.0/voc/"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"namespaceProfile"}),": The URI to the link type vocabulary profile of the namespace (if applicable). Defaults to internal URI ",(0,r.jsx)(i.code,{children:"http://localhost:3000/api/1.0.0/voc/?show=linktypes"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"applicationIdentifiers"}),": An array of application identifiers associated with this namespace that can be registered with the IDR."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"createupdate-identifier-flow",children:"Create/Update Identifier Flow"}),"\n",(0,r.jsx)(i.mermaid,{value:'graph TD\n    A[Start] --\x3e B["Receive Create or <br> Update Request <br> (JSON Payload)"];\n    B --\x3e C{Validate Request Structure};\n    C --\x3e|Invalid| D[Return Validation <br> Error - 400];\n    C --\x3e|Valid| E{Validate Identifier Rules};\n    E --\x3e|Invalid| D;\n    E --\x3e|Valid| F["Generate File Name: <br> {path}/{namespace}.json"];\n    F --\x3e G[Construct Identifier JSON];\n    G --\x3e H[Store/Overwrite in MinIO];\n    H --\x3e I["Return Success <br> Response (200/201)"];\n    I --\x3e J[End];'}),"\n",(0,r.jsx)(i.h3,{id:"retrieve-identifier-flow",children:"Retrieve Identifier Flow"}),"\n",(0,r.jsx)(i.mermaid,{value:'graph TD\n    K[Start] --\x3e L["Receive Retrieve <br> Request (Namespace)"];\n    L --\x3e M{Validate Namespace <br> Parameter};\n    M --\x3e|Invalid| N[Return Validation <br> Error - 400];\n    M --\x3e|Valid| O["Generate File Name: <br> {path}/{namespace}.json"];\n    O --\x3e P{Check if File Exists in MinIO};\n    P --\x3e|No| Q[Return Not Found <br> Error - 404];\n    P --\x3e|Yes| R[Read Identifier <br> JSON from MinIO];\n    R --\x3e S["Return Identifier Data <br> (200)"];\n    S --\x3e T[End];'}),"\n",(0,r.jsx)(i.h3,{id:"delete-identifier-flow",children:"Delete Identifier Flow"}),"\n",(0,r.jsx)(i.mermaid,{value:'graph TD\n    U[Start] --\x3e V["Receive Delete Request <br> (Namespace)"];\n    V --\x3e W{Validate Namespace <br> Parameter};\n    W --\x3e|Invalid| X[Return Validation <br> Error - 400];\n    W --\x3e|Valid| Y["Generate File Name: <br> {path}/{namespace}.json"];\n    Y --\x3e Z{Check if File Exists in MinIO};\n    Z --\x3e|No| AA[Return Not Found <br> Error - 404];\n    Z --\x3e|Yes| BB[Delete File from MinIO];\n    BB --\x3e CC["Return Success Response <br> (204)"];\n    CC --\x3e DD[End];'}),"\n",(0,r.jsx)(i.h2,{id:"application-identifier-properties",children:"Application Identifier Properties"}),"\n",(0,r.jsxs)(i.p,{children:["Each application identifier within the ",(0,r.jsx)(i.code,{children:"applicationIdentifiers"})," array consists of the following properties:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"title"}),": The full name of the application identifier"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"label"}),": A short label for the application identifier"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"shortcode"}),": A concise code for quick reference"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"ai"}),": The unique application identifier number within the namespace"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"type"}),": The identifier type, which can be:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"I"}),": Identifier"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Q"}),": Qualifier"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"D"}),": Data attribute"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"regex"}),": A regular expression pattern for validation"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"qualifiers"}),": A list of qualifiers used for identification and resolution (optional)"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"identifier-types-and-prerequisites",children:"Identifier Types and Prerequisites"}),"\n",(0,r.jsx)(i.p,{children:"The IDR system supports three types of application identifiers, each with its own role and prerequisites:"}),"\n",(0,r.jsx)(i.h3,{id:"1-identifier-i",children:"1. Identifier (I)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Role"}),": Serves as the primary identifier for a resource."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Prerequisites"}),":","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Must have a unique ",(0,r.jsx)(i.code,{children:"ai"})," within the namespace."]}),"\n",(0,r.jsx)(i.li,{children:"Can have optional qualifiers."}),"\n",(0,r.jsxs)(i.li,{children:["Must have a valid ",(0,r.jsx)(i.code,{children:"regex"})," pattern for validation."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"2-qualifier-q",children:"2. Qualifier (Q)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Role"}),": Provides additional context or specificity to a primary identifier."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Prerequisites"}),":","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Must have a unique ",(0,r.jsx)(i.code,{children:"ai"})," within the namespace."]}),"\n",(0,r.jsx)(i.li,{children:"Must be listed as a qualifier for at least one Identifier type within the same namespace."}),"\n",(0,r.jsxs)(i.li,{children:["Must have a valid ",(0,r.jsx)(i.code,{children:"regex"})," pattern for validation."]}),"\n",(0,r.jsx)(i.li,{children:"Cannot have qualifiers of its own."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"3-data-attribute-d",children:"3. Data Attribute (D)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Role"}),": Represents additional data associated with an identifier but not used for resolution."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Prerequisites"}),":","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Must have a unique ",(0,r.jsx)(i.code,{children:"ai"})," within the namespace."]}),"\n",(0,r.jsxs)(i.li,{children:["Must have a valid ",(0,r.jsx)(i.code,{children:"regex"})," pattern for validation."]}),"\n",(0,r.jsx)(i.li,{children:"Cannot have qualifiers."}),"\n",(0,r.jsx)(i.li,{children:"Is not used in the resolution process."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"general-prerequisites",children:"General Prerequisites"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Each namespace must have at least one Identifier type."}),"\n",(0,r.jsx)(i.li,{children:"The combination of namespace and primary identifier (Identifier type) must be unique across the entire system."}),"\n",(0,r.jsxs)(i.li,{children:["All application identifiers within a namespace must have unique ",(0,r.jsx)(i.code,{children:"ai"})," and ",(0,r.jsx)(i.code,{children:"shortcode"})," values."]}),"\n",(0,r.jsxs)(i.li,{children:["The ",(0,r.jsx)(i.code,{children:"regex"})," patterns must be valid and appropriate for the data they are meant to validate."]}),"\n",(0,r.jsx)(i.li,{children:"Qualifiers listed for an Identifier type must exist as Qualifier types within the same namespace."}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"api-operations",children:"API Operations"}),"\n",(0,r.jsx)(i.p,{children:"The Identifier Management API supports the following operations:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Create or update an identifier"}),"\n",(0,r.jsx)(i.li,{children:"Retrieve an identifier by namespace"}),"\n",(0,r.jsx)(i.li,{children:"Delete an identifier by namespace"}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["See the ",(0,r.jsx)(i.a,{href:"http://localhost:3000/api-docs#/Identifiers",children:"API specification"})," for details."]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var t=n(6540);const r={},s=t.createContext(r);function a(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);