"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5451],{8096:(e,n,i)=>{i.d(n,{Ay:()=>l,RM:()=>r});var t=i(4848),s=i(8453);const r=[];function o(e){const n={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},5217:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"introduction/link_types","title":"Link Types","description":"Link types play a crucial role in the Identity Digital Resolver (IDR) service by defining the nature and purpose of the links associated with identifiers. They provide a standardised way to categorise and describe the relationships between identifiers and their related resources.","source":"@site/versioned_docs/version-1.0.0/introduction/link_types.md","sourceDirName":"introduction","slug":"/introduction/link_types","permalink":"/pyx-identity-resolver/docs/introduction/link_types","draft":false,"unlisted":false,"editUrl":"https://github.com/pyx-industries/pyx-identity-resolver/versioned_docs/version-1.0.0/introduction/link_types.md","tags":[],"version":"1.0.0","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Link Types"},"sidebar":"tutorialSidebar","previous":{"title":"Identifier Management","permalink":"/pyx-identity-resolver/docs/introduction/identifier_management"},"next":{"title":"Resolver Description File","permalink":"/pyx-identity-resolver/docs/introduction/resolver_description_file"}}');var s=i(4848),r=i(8453),o=i(8096);const l={sidebar_position:5,title:"Link Types"},a="Link Types",d={},c=[...o.RM,{value:"Role of Link Types",id:"role-of-link-types",level:2},{value:"Where Link Types Are Used in the System",id:"where-link-types-are-used-in-the-system",level:2},{value:"IDR Expectations for Link Types",id:"idr-expectations-for-link-types",level:2},{value:"Using External Link Type Vocabularies",id:"using-external-link-type-vocabularies",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.Ay,{}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"link-types",children:"Link Types"})}),"\n",(0,s.jsx)(n.p,{children:"Link types play a crucial role in the Identity Digital Resolver (IDR) service by defining the nature and purpose of the links associated with identifiers. They provide a standardised way to categorise and describe the relationships between identifiers and their related resources."}),"\n",(0,s.jsx)(n.h2,{id:"role-of-link-types",children:"Role of Link Types"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Categorisation"}),": Link types categorise the nature of the relationship between an identifier and a linked resource. For example, a link type might indicate that a URL leads to product information, safety data, or a promotional page."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Interoperability"}),": By using standardised link types, different systems can understand and process links consistently, enabling seamless data exchange and integration."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Flexibility"}),": While the IDR provides a default set of link types based on GS1 standards, it also allows for custom link types, enabling adaptation to specific industry needs or unique use cases."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Discoverability"}),": Link types make it easier for clients to discover and utilise relevant information associated with an identifier."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"where-link-types-are-used-in-the-system",children:"Where Link Types Are Used in the System"}),"\n",(0,s.jsx)(n.p,{children:"Link types are utilised in several key areas of the IDR system:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Link Registration"}),": When registering a new link, the link type is specified as part of the registration payload. This defines the nature of the relationship between the identifier and the linked resource."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Link Resolution"}),": During the link resolution process, link types are used to filter and retrieve the appropriate links based on the client's request."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Response Construction"}),": When constructing the response to a resolution request, link types are used to organise and present the relevant links in both the linkset JSON and the link header text."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"idr-expectations-for-link-types",children:"IDR Expectations for Link Types"}),"\n",(0,s.jsx)(n.p,{children:"When using link types in the IDR service, whether they are default or custom, the following expectations should be met:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Unique Identification"}),": Each link type should have a unique identifier. E.g. ",(0,s.jsx)(n.code,{children:"productInfo"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Clear Definition"}),": Each link type should have a clear, concise definition that describes its purpose and the nature of the relationship it represents."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Vocabulary Documentation"}),": When using external link type vocabularies, descriptive documentation should be available at the URL specified in the ",(0,s.jsx)(n.code,{children:"profile"})," field of the ",(0,s.jsx)(n.code,{children:"SupportedLinkType"})," object."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Resolvability"}),": The ",(0,s.jsx)(n.code,{children:"namespace"})," URL in the ",(0,s.jsx)(n.code,{children:"SupportedLinkType"})," object should ideally resolve to a human-readable description of the link type vocabulary and must resolve to a machine-readable format (JSON)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"using-external-link-type-vocabularies",children:"Using External Link Type Vocabularies"}),"\n",(0,s.jsx)(n.p,{children:"When using external link type vocabularies for an identifier scheme within the IDR service, the following guidelines should be followed:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Namespace Declaration"}),": The URI of the namespace vocabulary of the identifier scheme should be declared using the ",(0,s.jsx)(n.code,{children:'"namespaceURI"'})," field when registering the identifier scheme within the identity resolver service. E.g. ",(0,s.jsx)(n.code,{children:'"namespaceURI": "http://localhost:3000/api/1.0.0/voc/"'}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Profile URL"}),": The profile URL should point to a resource that describes the link types in the vocabulary, in a machine-readable format (JSON). E.g. ",(0,s.jsx)(n.code,{children:'"profileUrl": "http://localhost:3000/api/1.0.0/voc/?show=linktypes"'}),"."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);