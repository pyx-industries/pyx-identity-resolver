"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7602],{8481:(e,i,n)=>{n.d(i,{Ay:()=>o,RM:()=>r});var t=n(4848),s=n(8453);const r=[];function a(e){const i={admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsx)(i.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},348:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"introduction/link_registration","title":"Link Registration","description":"Authorized users can register identity resolvers through the API. The data will be constructed and stored in a JSON file, with the filename determined by the namespace, primary identifier and qualifier path.","source":"@site/docs/introduction/link_registration.md","sourceDirName":"introduction","slug":"/introduction/link_registration","permalink":"/pyx-identity-resolver/docs/next/introduction/link_registration","draft":false,"unlisted":false,"editUrl":"https://github.com/pyx-industries/pyx-identity-resolver/docs/introduction/link_registration.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Link Registration"},"sidebar":"tutorialSidebar","previous":{"title":"Resolver Description File","permalink":"/pyx-identity-resolver/docs/next/introduction/resolver_description_file"},"next":{"title":"Link resolution","permalink":"/pyx-identity-resolver/docs/next/introduction/link_resolution"}}');var s=n(4848),r=n(8453),a=n(8481);const o={sidebar_position:7,title:"Link Registration"},l="Link Registration",d={},c=[...a.RM,{value:"Link Registration Structure",id:"link-registration-structure",level:2},{value:"Link Registration Properties",id:"link-registration-properties",level:2},{value:"Response Properties",id:"response-properties",level:2},{value:"Link Registration Flow",id:"link-registration-flow",level:2},{value:"Process Description:",id:"process-description",level:3},{value:"Validation Rules",id:"validation-rules",level:2},{value:"API Operations",id:"api-operations",level:2}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.Ay,{}),"\n",(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"link-registration",children:"Link Registration"})}),"\n",(0,s.jsx)(i.p,{children:"Authorized users can register identity resolvers through the API. The data will be constructed and stored in a JSON file, with the filename determined by the namespace, primary identifier and qualifier path."}),"\n",(0,s.jsx)(i.h2,{id:"link-registration-structure",children:"Link Registration Structure"}),"\n",(0,s.jsx)(i.p,{children:"The link registration system uses a JSON structure to define each identity resolver based on the namespace, identification key type, primary identifier, and qualifier path. Here's an example of the structure for a single link registration:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "namespace": "gs1",\n  "identificationKeyType": "gtin",\n  "identificationKey": "12345678901234",\n  "itemDescription": "Product description",\n  "qualifierPath": "/10/12345678901234567890",\n  "active": true,\n  "responses": [\n    {\n      "defaultLinkType": true,\n      "defaultMimeType": true,\n      "defaultIanaLanguage": true,\n      "defaultContext": true,\n      "fwqs": false,\n      "active": true,\n      "linkType": "gs1:certificationInfo",\n      "ianaLanguage": "en",\n      "context": "au",\n      "title": "Certification Information",\n      "targetUrl": "https://example.com",\n      "mimeType": "application/json"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(i.h2,{id:"link-registration-properties",children:"Link Registration Properties"}),"\n",(0,s.jsx)(i.p,{children:"Each link registration JSON object consists of the following top-level properties:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"namespace"}),': The namespace of the identifier scheme (e.g., "gs1")']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"identificationKeyType"}),': The type of the primary identifier (e.g., "gtin")']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"identificationKey"}),": The value of the primary identifier"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"itemDescription"}),": A description of the item being identified"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"qualifierPath"}),": The path of qualifiers, if any"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"active"}),": A boolean indicating whether this registration is active"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"responses"}),": An array of response objects associated with this registration"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"response-properties",children:"Response Properties"}),"\n",(0,s.jsxs)(i.p,{children:["Each response object within the ",(0,s.jsx)(i.code,{children:"responses"})," array consists of the following properties:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"defaultLinkType"}),": Indicates if this is the default link type when none is specified"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"defaultMimeType"}),": Indicates if this is the default MIME type when none is specified"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"defaultIanaLanguage"}),": Indicates if this is the default language when none is specified"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"defaultContext"}),": Indicates if this is the default context when none is specified"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"fwqs"}),": A boolean indicating whether to forward the query string to the target URL"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"active"}),": A boolean indicating whether this response is active"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"linkType"}),": The type of link, which should be defined in the identifier scheme"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ianaLanguage"}),': The IANA language tag for the response (e.g., "en" for English)']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"context"}),': The context of the response (e.g., "au" for Australia)']}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"title"}),": The title of the link"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"targetUrl"}),": The target URL of the link"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"mimeType"}),': The MIME type of the response (e.g., "application/json")']}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The response is used to construct the link type of link set that follows the ",(0,s.jsx)(i.a,{href:"https://datatracker.ietf.org/doc/html/rfc9264",children:"RFC 9264"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"link-registration-flow",children:"Link Registration Flow"}),"\n",(0,s.jsx)(i.p,{children:"The following diagram illustrates the flow of the link registration process, including validation, link set construction, and storage for both new registrations and updates (upserts):"}),"\n",(0,s.jsx)(i.mermaid,{value:"graph TD\n    A[Start] --\x3e B[Receive Link Registration <br> Request]\n    B --\x3e C{Validate Request}\n    C --\x3e|Invalid| D[Return Validation <br>  Error - 400]\n    C --\x3e|Valid| E{Validate Namespace <br>  and Identifiers}\n    E --\x3e|Invalid| D\n    E --\x3e|Valid| F[Generate File Name]\n    F --\x3e G{Check if File Exists}\n    G --\x3e|No| H[Construct New Link Set]\n    G --\x3e|Yes| I[Retrieve Existing Link Set]\n    I --\x3e J[Merge New Data <br> with Existing]\n    J --\x3e K[Construct Updated Link Set]\n    H --\x3e L[Store in MinIO]\n    K --\x3e L\n    L --\x3e M[Return Success Response]\n    M --\x3e N[End]\n\n    subgraph Validation\n    C\n    E\n    end\n\n    subgraph Link Set Construction\n    H\n    I\n    J\n    K\n    end\n\n    subgraph Storage\n    F\n    G\n    L\n    end"}),"\n",(0,s.jsx)(i.h3,{id:"process-description",children:"Process Description:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Receive Link Registration Request"}),": The system receives a link registration request from an authorized user."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Validate Request"}),": The request is validated for proper structure and required fields."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Validate Namespace and Identifiers"}),": The system checks if the namespace exists and if the identifiers are valid according to the registered identifier scheme."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Generate File Name"}),": A unique file name is generated based on the namespace, identification key type, primary identifier, and qualifier path."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Check if File Exists"}),": The system checks if a file with the generated name already exists in MinIO."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Construct Link Set"}),":"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["For new registrations: If the file doesn't exist, the system constructs a new link set according to ",(0,s.jsx)(i.a,{href:"https://datatracker.ietf.org/doc/html/rfc9264",children:"RFC 9264"}),"."]}),"\n",(0,s.jsx)(i.li,{children:"For updates: If the file exists, the system retrieves the existing link set, merges it with the new data, and constructs an updated link set."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Store in MinIO"}),": The constructed link set is stored as a JSON file in MinIO using the bucket name environment variable (OBJECT_STORAGE_BUCKET_NAME), and the generated file name."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Return Success Response"}),": If storage is successful, a success response is returned to the user."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,s.jsx)(i.p,{children:"When registering or updating a link resolver, the system enforces the following rules:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"The namespace must exist in the identifier management system."}),"\n",(0,s.jsx)(i.li,{children:"The identificationKeyType must be a valid Identifier type for the given namespace."}),"\n",(0,s.jsx)(i.li,{children:"The identificationKey must match the regex pattern defined for the Identifier type."}),"\n",(0,s.jsx)(i.li,{children:"If qualifierPath is provided, it must contain valid Qualifier types for the Identifier and match each of the qualifier regex patterns."}),"\n",(0,s.jsx)(i.li,{children:"Each response must have a linkType that is valid for the namespace."}),"\n",(0,s.jsx)(i.li,{children:"The mimeType in each response must be a valid MIME type."}),"\n",(0,s.jsx)(i.li,{children:"IANA Language tag must be a valid language tag."}),"\n",(0,s.jsx)(i.li,{children:"Contexts must be a valid context."}),"\n",(0,s.jsx)(i.li,{children:"Target URLs must be a valid URL."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"api-operations",children:"API Operations"}),"\n",(0,s.jsx)(i.p,{children:"The Link Registration API supports the following operations:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Create or Upset a link registration"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["See the ",(0,s.jsx)(i.a,{href:"http://localhost:3000/api-docs#/Link%20Registration",children:"API specification"})," for details."]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>o});var t=n(6540);const s={},r=t.createContext(s);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);