"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7715],{8481:(e,n,t)=>{t.d(n,{Ay:()=>d,RM:()=>s});var i=t(4848),r=t(8453);const s=[];function o(e){const n={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},3511:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"getting-started/configuration","title":"Configuration","description":"This section outlines where the configuration for the Identity Resolver Service (IDR) is stored and details the environment variables used to manage its behavior.","source":"@site/docs/getting-started/configuration.md","sourceDirName":"getting-started","slug":"/getting-started/configuration","permalink":"/pyx-identity-resolver/docs/next/getting-started/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/pyx-industries/pyx-identity-resolver/docs/getting-started/configuration.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start","permalink":"/pyx-identity-resolver/docs/next/getting-started/quick-start"}}');var r=t(4848),s=t(8453),o=t(8481);const d={sidebar_position:4,title:"Configuration"},c="Configuration",l={},a=[...o.RM,{value:"Location",id:"location",level:2},{value:"Core Variables",id:"core-variables",level:2},{value:"Object Storage Configuration",id:"object-storage-configuration",level:2},{value:"Other Configuration",id:"other-configuration",level:2},{value:"NODE_ENV",id:"node_env",level:2}];function h(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.Ay,{}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,r.jsx)(n.p,{children:"This section outlines where the configuration for the Identity Resolver Service (IDR) is stored and details the environment variables used to manage its behavior."}),"\n",(0,r.jsx)(n.h2,{id:"location",children:"Location"}),"\n",(0,r.jsxs)(n.p,{children:["The configuration for the Identity Resolver Service (IDR) is stored in environment-specific files located in the project\u2019s ",(0,r.jsx)(n.code,{children:"app"})," directory. These files are used to define environment variables based on the application\u2019s runtime environment, which is determined by the ",(0,r.jsx)(n.code,{children:"NODE_ENV"})," variable. The files are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".env.development.local"})," and ",(0,r.jsx)(n.code,{children:".env.development"})," for the development environment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".env.test.local"})," and ",(0,r.jsx)(n.code,{children:".env.test"})," for the test environment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".env.production.local"})," and ",(0,r.jsx)(n.code,{children:".env.production"})," for the production environment.",(0,r.jsx)(n.br,{}),"\n","The ",(0,r.jsx)(n.code,{children:".env.[environment].local"})," files take precedence over the corresponding ",(0,r.jsx)(n.code,{children:".env.[environment]"})," files, allowing for local overrides without affecting the base configuration."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"core-variables",children:"Core Variables"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"NODE_ENV"}),(0,r.jsx)(n.td,{children:"Specifies the environment (development, test, production)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RESOLVER_DOMAIN"}),(0,r.jsx)(n.td,{children:"The base URL of the resolver service"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PORT"}),(0,r.jsx)(n.td,{children:"The port the resolver service is exposed to"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"APP_NAME"}),(0,r.jsx)(n.td,{children:"The name of the application"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"API_KEY"}),(0,r.jsx)(n.td,{children:"API key for authentication"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"LINK_TYPE_VOC_DOMAIN"}),(0,r.jsx)(n.td,{children:"The base URL of the link type vocabulary endpoint"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"object-storage-configuration",children:"Object Storage Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_ENDPOINT"}),(0,r.jsx)(n.td,{children:"The MinIO server endpoint or object storage endpoint"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_PORT"}),(0,r.jsx)(n.td,{children:"The MinIO server port. If using object storage, not required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_USE_SSL"}),(0,r.jsx)(n.td,{children:"Whether to use SSL for MinIO connections"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_ACCESS_KEY"}),(0,r.jsx)(n.td,{children:"The MinIO access key or cloud provider access key"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_SECRET_KEY"}),(0,r.jsx)(n.td,{children:"The MinIO secret key or cloud provider secret key"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_PATH_STYLE"}),(0,r.jsxs)(n.td,{children:["Enable or disable path-style requests for MinIO. Set to ",(0,r.jsx)(n.code,{children:"false"})," for cloud providers. Set to ",(0,r.jsx)(n.code,{children:"true"})," if you are using MinIO Gateway. By default, it is set to ",(0,r.jsx)(n.code,{children:"true"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OBJECT_STORAGE_BUCKET_NAME"}),(0,r.jsx)(n.td,{children:"Name of the MinIO bucket to use"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"other-configuration",children:"Other Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"IDENTIFIER_PATH"}),(0,r.jsx)(n.td,{children:"Path for identifier-related operations"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"node_env",children:"NODE_ENV"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"NODE_ENV"})," variable is crucial for determining which environment variable files are loaded by the application:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"development"}),": Loads the environment variables from ",(0,r.jsx)(n.code,{children:".env.development.local"})," and ",(0,r.jsx)(n.code,{children:".env.development"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"test"}),": Loads the environment variables from ",(0,r.jsx)(n.code,{children:".env.test.local"})," and ",(0,r.jsx)(n.code,{children:".env.test"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"production"}),": Loads the environment variables from ",(0,r.jsx)(n.code,{children:".env.production.local"})," and ",(0,r.jsx)(n.code,{children:".env.production"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);